<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- #9.2 aop관련태그작성 -->
	<!-- ================== 선언적 AOP 시작 ===================== -->
	<!-- LoggerAspect 빈등록 -->
	<!-- <bean id="loggerAspect" class="com.kh.aop.common.aop.LoggerAspect"></bean>
	aop작성
	<aop:config>
		<aop:aspect ref="loggerAspect" id="loggerAspcet">
			<aop:pointcut expression="execution(* com.kh.aop.memo..*(..) )" id="pcForAll"/>
			<aop:around method="loggerAdvice" pointcut-ref="pcForAll"/>
		</aop:aspect>
	</aop:config> -->
	<!-- ================== 선언적 AOP 끝 ===================== -->
	<!-- ================== 프로그래밍적 AOP 시작 ===================== -->
	<aop:aspectj-autoproxy />
	<!-- ================== 프로그래밍적 AOP 끝 ===================== -->
	<!-- #11.2 트랜잭션처리를 위해서 특정클래스/특정메소드를 aop pointcut으로 지정 -->
	<!-- <aop:config>
		<aop:pointcut expression="execution(* com.kh.spring..*ServiceImpl.*(..))" id="serviceMethod"/>
	</aop:config> -->
</beans>
